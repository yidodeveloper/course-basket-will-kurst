name: 'Terraform'

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Configure AWS credentials to use AWS resources
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Install Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: app/infra

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: app/infra
    
    # Get which files are changed
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44

    # If some HTML, CSS, JS, JSON files are modified, taint s3 object
    - name: Terraform Taint on File Change
      if: |
        ${{ contains(steps.changed-files.outputs.modified_files, 'index.html') || 
              contains(steps.changed-files.outputs.modified_files, 'home.html') || 
              contains(steps.changed-files.outputs.modified_files, 'style.css') || 
              contains(steps.changed-files.outputs.modified_files, 'login.js') || 
              contains(steps.changed-files.outputs.modified_files, 'lecture.js') || 
              contains(steps.changed-files.outputs.modified_files, '24-2.json') }}
      run: |
        for file in ${{ steps.changed-files.outputs.modified_files }}; do
          case "$file" in
            "app/source-code/html/index.html")
              terraform taint aws_s3_object.index_html
              ;;
            "app/source-code/html/home.html")
              terraform taint aws_s3_object.home_html
              ;;
            "app/source-code/css/style.css")
              terraform taint aws_s3_object.style_css
              ;;
            "app/source-code/js/login.js")
              terraform taint aws_s3_object.login_js
              ;;
            "app/source-code/js/lecture.js")
              terraform taint aws_s3_object.lecture_js
              ;;
            "app/data/24-2.json")
              terraform taint aws_s3_object.data_24_2_json
              ;;
          esac
        done
      working-directory: app/infra

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: app/infra

    # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      working-directory: app/infra  